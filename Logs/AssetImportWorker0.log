Unity Editor version:    6000.1.7f1 (13a8ffad9172)
Branch:                  6000.1/staging
Build type:              Release
Batch mode:              YES
macOS version:           Version 15.2 (Build 24C101)
Darwin version:          24.2.0
Architecture:            arm64
Running under Rosetta:   NO
Available memory:        8192 MB
Date:                    2025-09-04T22:05:11Z
Using pre-set license
Pro License: YES

COMMAND LINE ARGUMENTS:
/Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/MacOS/Unity
-adb2
-batchMode
-noUpm
-name
AssetImportWorker0
-projectPath
/Users/riddh/Cloud Repositories/Martian Frontier
-logFile
Logs/AssetImportWorker0.log
-srvPort
53922
-job-worker-count
3
-background-job-worker-count
8
-gc-helper-count
1
-name AssetImport
Successfully changed project path to: /Users/riddh/Cloud Repositories/Martian Frontier
/Users/riddh/Cloud Repositories/Martian Frontier
[UnityMemory] Configuration Parameters - Can be set up in boot.config
    "memorysetup-allocator-temp-initial-block-size-main=262144"
    "memorysetup-allocator-temp-initial-block-size-worker=262144"
    "memorysetup-bucket-allocator-granularity=16"
    "memorysetup-bucket-allocator-bucket-count=8"
    "memorysetup-bucket-allocator-block-size=33554432"
    "memorysetup-bucket-allocator-block-count=8"
    "memorysetup-main-allocator-block-size=16777216"
    "memorysetup-thread-allocator-block-size=16777216"
    "memorysetup-gfx-main-allocator-block-size=16777216"
    "memorysetup-gfx-thread-allocator-block-size=16777216"
    "memorysetup-cache-allocator-block-size=4194304"
    "memorysetup-typetree-allocator-block-size=2097152"
    "memorysetup-profiler-bucket-allocator-granularity=16"
    "memorysetup-profiler-bucket-allocator-bucket-count=8"
    "memorysetup-profiler-bucket-allocator-block-size=33554432"
    "memorysetup-profiler-bucket-allocator-block-count=8"
    "memorysetup-profiler-allocator-block-size=16777216"
    "memorysetup-profiler-editor-allocator-block-size=1048576"
    "memorysetup-temp-allocator-size-main=16777216"
    "memorysetup-job-temp-allocator-block-size=2097152"
    "memorysetup-job-temp-allocator-block-size-background=1048576"
    "memorysetup-job-temp-allocator-reduction-small-platforms=262144"
    "memorysetup-temp-allocator-size-background-worker=32768"
    "memorysetup-temp-allocator-size-job-worker=262144"
    "memorysetup-temp-allocator-size-preload-manager=33554432"
    "memorysetup-temp-allocator-size-nav-mesh-worker=65536"
    "memorysetup-temp-allocator-size-audio-worker=65536"
    "memorysetup-temp-allocator-size-cloud-worker=32768"
    "memorysetup-temp-allocator-size-gi-baking-worker=262144"
    "memorysetup-temp-allocator-size-gi-baking-worker=262144"
    "memorysetup-temp-allocator-size-gi-baking-worker=262144"
    "memorysetup-temp-allocator-size-gi-baking-worker=262144"
    "memorysetup-temp-allocator-size-gi-baking-worker=262144"
    "memorysetup-temp-allocator-size-gfx=262144"
Player connection [8693121600]  Target information:

Player connection [8693121600]  * "[IP] 192.168.2.43 [Port] 0 [Flags] 2 [Guid] 104350723 [EditorId] 104350723 [Version] 1048832 [Id] OSXEditor(0,Mac) [Debug] 1 [PackageName] OSXEditor [ProjectName] Editor" 

Player connection [8693121600] Host joined multi-casting on [225.0.0.222:54997]...
Player connection [8693121600] Host joined alternative multi-casting on [225.0.0.222:34997]...
JobSystem: Creating JobQueue using job-worker-count value 3
Input System module state changed to: Initialized.
[Physics::Module] Initialized fallback backend.
[Physics::Module] Id: 0xdecafbad
Library Redirect Path: Library/
[Physics::Module] Selected backend.
[Physics::Module] Name: PhysX
[Physics::Module] Id: 0xf2b8ea05
[Physics::Module] SDK Version: 4.1.2
[Physics::Module] Integration Version: 1.0.0
[Physics::Module] Threading Mode: Multi-Threaded
Refreshing native plugins compatible for Editor in 91.31 ms, found 12 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Initialize engine version: 6000.1.7f1 (13a8ffad9172)
[Subsystems] Discovering subsystems at path /Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/Resources/UnitySubsystems
[Subsystems] Discovering subsystems at path /Users/riddh/Cloud Repositories/Martian Frontier/Assets
GfxDevice: creating device client; kGfxThreadingModeNonThreaded
 preferred device: Apple M2 (high power)
Metal devices available: 1
0: Apple M2 (high power)
Using device Apple M2 (high power)
Initializing Metal device caps: Apple M2
Initialize mono
Mono path[0] = '/Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/Managed'
Mono path[1] = '/Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/MonoBleedingEdge/lib/mono/unityjit-macos'
Mono config path = '/Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/MonoBleedingEdge/etc'
Using monoOptions --debugger-agent=transport=dt_socket,embedding=1,server=y,suspend=n,address=127.0.0.1:56895
Begin MonoManager ReloadAssembly
Registering precompiled unity dll's ...
Register platform support module: /Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/UnityEditor.OSXStandalone.Extensions.dll
Register platform support module: /Applications/Unity/Hub/Editor/6000.1.7f1/PlaybackEngines/AndroidPlayer/UnityEditor.Android.Extensions.dll
Register platform support module: /Applications/Unity/Hub/Editor/6000.1.7f1/PlaybackEngines/iOSSupport/UnityEditor.iOS.Extensions.dll
Registered in 0.008056 seconds.
- Loaded All Assemblies, in  0.589 seconds
[usbmuxd] Start listen thread
[usbmuxd] Listen thread started
[usbmuxd] Send listen message
Native extension for iOS target not found
Native extension for Android target not found
Android Extension - Scanning For ADB Devices 79 ms
Native extension for OSXStandalone target not found
Mono: successfully reloaded assembly
- Finished resetting the current domain, in  0.549 seconds
Domain Reload Profiling: 1139ms
	BeginReloadAssembly (277ms)
		ExecutionOrderSort (0ms)
		DisableScriptedObjects (0ms)
		BackupInstance (0ms)
		ReleaseScriptingObjects (0ms)
		CreateAndSetChildDomain (1ms)
	RebuildCommonClasses (58ms)
	RebuildNativeTypeToScriptingClass (10ms)
	initialDomainReloadingComplete (62ms)
	LoadAllAssembliesAndSetupDomain (182ms)
		LoadAssemblies (282ms)
		RebuildTransferFunctionScriptingTraits (0ms)
		AnalyzeDomain (174ms)
			TypeCache.Refresh (173ms)
				TypeCache.ScanAssembly (156ms)
			BuildScriptInfoCaches (0ms)
			ResolveRequiredComponents (0ms)
	FinalizeReload (550ms)
		ReleaseScriptCaches (0ms)
		RebuildScriptCaches (0ms)
		SetupLoadedEditorAssemblies (508ms)
			LogAssemblyErrors (0ms)
			InitializePlatformSupportModulesInManaged (322ms)
			SetLoadedEditorAssemblies (4ms)
			BeforeProcessingInitializeOnLoad (48ms)
			ProcessInitializeOnLoadAttributes (81ms)
			ProcessInitializeOnLoadMethodAttributes (53ms)
			AfterProcessingInitializeOnLoad (0ms)
			EditorAssembliesLoaded (0ms)
		ExecutionOrderSort2 (0ms)
		AwakeInstancesAfterBackupRestoration (0ms)
========================================================================
Worker process is ready to serve import requests
Import Worker Mode flag is 0x00
Begin MonoManager ReloadAssembly
Symbol file LoadedFromMemory is not a mono symbol file
- Loaded All Assemblies, in  1.548 seconds
Refreshing native plugins compatible for Editor in 7.73 ms, found 12 plugins.
Native extension for iOS target not found
Native extension for Android target not found
Native extension for OSXStandalone target not found
Package Manager log level set to [2]
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
Refreshing native plugins compatible for Editor in 6.58 ms, found 12 plugins.
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
Mono: successfully reloaded assembly
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
- Finished resetting the current domain, in  0.850 seconds
Domain Reload Profiling: 2376ms
	BeginReloadAssembly (102ms)
		ExecutionOrderSort (0ms)
		DisableScriptedObjects (5ms)
		BackupInstance (0ms)
		ReleaseScriptingObjects (0ms)
		CreateAndSetChildDomain (31ms)
	RebuildCommonClasses (28ms)
	RebuildNativeTypeToScriptingClass (10ms)
	initialDomainReloadingComplete (27ms)
	LoadAllAssembliesAndSetupDomain (1359ms)
		LoadAssemblies (1013ms)
		RebuildTransferFunctionScriptingTraits (0ms)
		AnalyzeDomain (385ms)
			TypeCache.Refresh (246ms)
				TypeCache.ScanAssembly (208ms)
			BuildScriptInfoCaches (130ms)
			ResolveRequiredComponents (7ms)
	FinalizeReload (851ms)
		ReleaseScriptCaches (0ms)
		RebuildScriptCaches (0ms)
		SetupLoadedEditorAssemblies (705ms)
			LogAssemblyErrors (0ms)
			InitializePlatformSupportModulesInManaged (22ms)
			SetLoadedEditorAssemblies (5ms)
			BeforeProcessingInitializeOnLoad (126ms)
			ProcessInitializeOnLoadAttributes (448ms)
			ProcessInitializeOnLoadMethodAttributes (102ms)
			AfterProcessingInitializeOnLoad (1ms)
			EditorAssembliesLoaded (0ms)
		ExecutionOrderSort2 (0ms)
		AwakeInstancesAfterBackupRestoration (2ms)
Launching external process: /Applications/Unity/Hub/Editor/6000.1.7f1/Unity.app/Contents/Tools/UnityShaderCompiler
Launched and connected shader compiler UnityShaderCompiler after 0.11 seconds
Refreshing native plugins compatible for Editor in 5.22 ms, found 12 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 154 Unused Serialized files (Serialized files now loaded: 0)
Unloading 7800 unused Assets / (2.7 MB). Loaded Objects now: 8248.
Memory consumption went from 154.0 MB to 151.3 MB.
Total: 14.307208 ms (FindLiveObjects: 0.590750 ms CreateObjectMapping: 0.395500 ms MarkObjects: 11.047333 ms  DeleteObjects: 2.272833 ms)

========================================================================
Received Import Request.
  Time since last request: 14951.529624 seconds.
  path: Assets/Prefabs/Background Object.prefab
  artifactKey: Guid(8840fcf93dbab4b31b95c11e2307371e) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Background Object.prefab using Guid(8840fcf93dbab4b31b95c11e2307371e) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: '3822908b7fb723d4818c4af2a16cb55d') in 0.053367542 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 12

========================================================================
Received Import Request.
  Time since last request: 0.000049 seconds.
  path: Assets/Prefabs/Material Button.prefab
  artifactKey: Guid(58698b35ff67147199311dca14ebe7f7) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Material Button.prefab using Guid(58698b35ff67147199311dca14ebe7f7) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: '18f4b5136de5359fc3d41507a5146ba9') in 0.254607459 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 51

========================================================================
Received Import Request.
  Time since last request: 0.000058 seconds.
  path: Assets/Prefabs/Haul Display Panel.prefab
  artifactKey: Guid(490a608982bbc4e609a0717e21ef18a9) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Haul Display Panel.prefab using Guid(490a608982bbc4e609a0717e21ef18a9) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: 'c63bd54015a702c3a69679078a6961e4') in 0.082148709 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 118

========================================================================
Received Import Request.
  Time since last request: 0.000044 seconds.
  path: Assets/Prefabs/Drill Tier Panel.prefab
  artifactKey: Guid(77aca0b74955d44c9a66e5c2c288fd45) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Drill Tier Panel.prefab using Guid(77aca0b74955d44c9a66e5c2c288fd45) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: 'da7a907de81ec40bb90ae5eb31d3b90e') in 0.075026209 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 34

========================================================================
Received Import Request.
  Time since last request: 0.000050 seconds.
  path: Assets/Prefabs/Mine Tilemap.prefab
  artifactKey: Guid(4074e1d1726b54b0b86463a72cc92063) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Mine Tilemap.prefab using Guid(4074e1d1726b54b0b86463a72cc92063) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: '1ef6ac7c5ede38d763f6c38f6dfef869') in 0.220463583 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 8

========================================================================
Received Import Request.
  Time since last request: 0.000044 seconds.
  path: Assets/Prefabs/Button.prefab
  artifactKey: Guid(e15e5d61ca256441d8059e9865475aeb) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Button.prefab using Guid(e15e5d61ca256441d8059e9865475aeb) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: 'b87c6dfa53d93bc5a8ade0d9db08aa52') in 0.085915792 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 101

========================================================================
Received Import Request.
  Time since last request: 0.000037 seconds.
  path: Assets/Prefabs/Map Icon.prefab
  artifactKey: Guid(fe56a05929cbd4b108f0593356622c38) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Map Icon.prefab using Guid(fe56a05929cbd4b108f0593356622c38) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: 'a64b21c27af3582ac3a8bbd6e5d53f78') in 0.013772791 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 7

========================================================================
Received Import Request.
  Time since last request: 0.000047 seconds.
  path: Assets/Prefabs/NPC.prefab
  artifactKey: Guid(69dfcb25aefcb485d811ad3e899ec6ee) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/NPC.prefab using Guid(69dfcb25aefcb485d811ad3e899ec6ee) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter)Sprite Lobby Spritesheet_0 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #17 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #18 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #19 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #20 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #21 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #22 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #23 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #24 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #25 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #26 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #27 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #28 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #30 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #31 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #40 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #42 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #43 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #44 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #45 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #46 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #47 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #48 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #49 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #50 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #51 _dispatch_client_callout
 #52 _dispatch_async_and_wait_invoke
 #53 _dispatch_client_callout
 #54 _dispatch_main_queue_drain
 #55 _dispatch_main_queue_callback_4CF
 #56 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #57 __CFRunLoopRun
 #58 CFRunLoopRunSpecific
 #59 RunCurrentEventLoopInMode
 #60 ReceiveNextEventCommon
 #61 _BlockUntilNextEventMatchingListInModeWithFilter
 #62 _DPSNextEvent
 #63 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #64 -[NSApplication run]
 #65 NSApplicationMain
 #66 EditorMain(int, char const**)
 #67 main
 #68 start

Sprite Lobby Spritesheet_1 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #17 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #18 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #19 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #20 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #21 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #22 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #23 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #24 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #25 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #26 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #27 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #28 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #30 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #31 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #40 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #42 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #43 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #44 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #45 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #46 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #47 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #48 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #49 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #50 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #51 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #52 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #53 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #54 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #55 _dispatch_client_callout
 #56 _dispatch_async_and_wait_invoke
 #57 _dispatch_client_callout
 #58 _dispatch_main_queue_drain
 #59 _dispatch_main_queue_callback_4CF
 #60 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #61 __CFRunLoopRun
 #62 CFRunLoopRunSpecific
 #63 RunCurrentEventLoopInMode
 #64 ReceiveNextEventCommon
 #65 _BlockUntilNextEventMatchingListInModeWithFilter
 #66 _DPSNextEvent
 #67 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #68 -[NSApplication run]
 #69 NSApplicationMain
 #70 EditorMain(int, char const**)
 #71 main
 #72 start

Sprite Lobby Spritesheet_2 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #17 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #18 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #19 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #20 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #21 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #22 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #23 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #24 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #25 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #26 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #27 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #28 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #30 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #31 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #40 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #42 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #43 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #44 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #45 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #46 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #47 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #48 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #49 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #50 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #51 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #52 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #53 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #54 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #55 _dispatch_client_callout
 #56 _dispatch_async_and_wait_invoke
 #57 _dispatch_client_callout
 #58 _dispatch_main_queue_drain
 #59 _dispatch_main_queue_callback_4CF
 #60 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #61 __CFRunLoopRun
 #62 CFRunLoopRunSpecific
 #63 RunCurrentEventLoopInMode
 #64 ReceiveNextEventCommon
 #65 _BlockUntilNextEventMatchingListInModeWithFilter
 #66 _DPSNextEvent
 #67 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #68 -[NSApplication run]
 #69 NSApplicationMain
 #70 EditorMain(int, char const**)
 #71 main
 #72 start

Sprite Lobby Spritesheet_3 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #17 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #18 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #19 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #20 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #21 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #22 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #23 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #24 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #25 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #26 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #27 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #28 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #30 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #31 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #40 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #42 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #43 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #44 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #45 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #46 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #47 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #48 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #49 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #50 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #51 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #52 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #53 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #54 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #55 _dispatch_client_callout
 #56 _dispatch_async_and_wait_invoke
 #57 _dispatch_client_callout
 #58 _dispatch_main_queue_drain
 #59 _dispatch_main_queue_callback_4CF
 #60 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #61 __CFRunLoopRun
 #62 CFRunLoopRunSpecific
 #63 RunCurrentEventLoopInMode
 #64 ReceiveNextEventCommon
 #65 _BlockUntilNextEventMatchingListInModeWithFilter
 #66 _DPSNextEvent
 #67 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #68 -[NSApplication run]
 #69 NSApplicationMain
 #70 EditorMain(int, char const**)
 #71 main
 #72 start

 -> (artifact id: 'd531be3d32b89ad80275d280695c4f76') in 0.35161475 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 268

========================================================================
Received Import Request.
  Time since last request: 0.000053 seconds.
  path: Assets/Prefabs/Ore Material Panel.prefab
  artifactKey: Guid(6948a1657298e44e485bfdf22c99e437) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Ore Material Panel.prefab using Guid(6948a1657298e44e485bfdf22c99e437) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: '66540054e8722b080f9ca4b94451a592') in 0.065184375 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 124

========================================================================
Received Prepare
Refreshing native plugins compatible for Editor in 33.25 ms, found 12 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 12 Unused Serialized files (Serialized files now loaded: 0)
Unloading 16 unused Assets / (1.7 MB). Loaded Objects now: 8259.
Memory consumption went from 126.4 MB to 124.7 MB.
Total: 29.281584 ms (FindLiveObjects: 0.754375 ms CreateObjectMapping: 0.175000 ms MarkObjects: 27.765167 ms  DeleteObjects: 0.586500 ms)

Prepare: number of updated asset objects reloaded= 82
========================================================================
Received Prepare
Refreshing native plugins compatible for Editor in 10.43 ms, found 12 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 12 Unused Serialized files (Serialized files now loaded: 0)
Unloading 12 unused Assets / (1.7 MB). Loaded Objects now: 8259.
Memory consumption went from 117.6 MB to 116.0 MB.
Total: 26.996250 ms (FindLiveObjects: 1.047666 ms CreateObjectMapping: 0.140000 ms MarkObjects: 25.546292 ms  DeleteObjects: 0.261458 ms)

Prepare: number of updated asset objects reloaded= 0
========================================================================
Received Import Request.
  Time since last request: 47.402298 seconds.
  path: Assets/Prefabs/Drill Display Panel.prefab
  artifactKey: Guid(429101b86c8424c4887d8dd400b43f9d) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Prefabs/Drill Display Panel.prefab using Guid(429101b86c8424c4887d8dd400b43f9d) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter)Sprite Lobby Spritesheet_0 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #17 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #18 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #19 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #20 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #21 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #22 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #23 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #24 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #25 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #26 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #27 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #28 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #30 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #31 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #36 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #38 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #39 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #40 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #41 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #42 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #43 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #44 _dispatch_client_callout
 #45 _dispatch_async_and_wait_invoke
 #46 _dispatch_client_callout
 #47 _dispatch_main_queue_drain
 #48 _dispatch_main_queue_callback_4CF
 #49 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #50 __CFRunLoopRun
 #51 CFRunLoopRunSpecific
 #52 RunCurrentEventLoopInMode
 #53 ReceiveNextEventCommon
 #54 _BlockUntilNextEventMatchingListInModeWithFilter
 #55 _DPSNextEvent
 #56 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #57 -[NSApplication run]
 #58 NSApplicationMain
 #59 EditorMain(int, char const**)
 #60 main
 #61 start

Sprite Lobby Spritesheet_1 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #17 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #18 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #19 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #20 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #21 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #22 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #23 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #24 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #25 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #26 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #27 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #28 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #30 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #31 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #40 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #42 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #43 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #44 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #45 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #46 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #47 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #48 _dispatch_client_callout
 #49 _dispatch_async_and_wait_invoke
 #50 _dispatch_client_callout
 #51 _dispatch_main_queue_drain
 #52 _dispatch_main_queue_callback_4CF
 #53 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #54 __CFRunLoopRun
 #55 CFRunLoopRunSpecific
 #56 RunCurrentEventLoopInMode
 #57 ReceiveNextEventCommon
 #58 _BlockUntilNextEventMatchingListInModeWithFilter
 #59 _DPSNextEvent
 #60 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #61 -[NSApplication run]
 #62 NSApplicationMain
 #63 EditorMain(int, char const**)
 #64 main
 #65 start

Sprite Lobby Spritesheet_2 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #17 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #18 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #19 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #20 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #21 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #22 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #23 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #24 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #25 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #26 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #27 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #28 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #30 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #31 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #40 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #42 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #43 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #44 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #45 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #46 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #47 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #48 _dispatch_client_callout
 #49 _dispatch_async_and_wait_invoke
 #50 _dispatch_client_callout
 #51 _dispatch_main_queue_drain
 #52 _dispatch_main_queue_callback_4CF
 #53 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #54 __CFRunLoopRun
 #55 CFRunLoopRunSpecific
 #56 RunCurrentEventLoopInMode
 #57 ReceiveNextEventCommon
 #58 _BlockUntilNextEventMatchingListInModeWithFilter
 #59 _DPSNextEvent
 #60 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #61 -[NSApplication run]
 #62 NSApplicationMain
 #63 EditorMain(int, char const**)
 #64 main
 #65 start

Sprite Lobby Spritesheet_3 matches more than one built-in atlases. Default to use the first available atlas.
 #0 PlatformStacktrace::GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 SpriteAtlasDatabase::GetDefaultAtlasForSprite(PPtr<Sprite> const&)
 #3 Sprite::RefreshEditorAtlasBinding()
 #4 Sprite::AwakeFromLoad(AwakeFromLoadMode)
 #5 AwakeFromLoadQueue::InvokePersistentManagerAwake(AwakeFromLoadQueue::Item*, unsigned int, AwakeFromLoadMode, bool)
 #6 AwakeFromLoadQueue::PersistentManagerSingleQueueAwakeFromLoad(int, AwakeFromLoadMode)
 #7 AwakeFromLoadQueue::PersistentManagerAwakeFromLoad_NoChecks(AwakeFromLoadMode)
 #8 PersistentManager::IntegrateAllThreadedObjects()
 #9 PersistentManager::LoadAndIntegrateAllPreallocatedObjects(PersistentManager::LockFlags)
 #10 PersistentManager::ReadObject(int, AwakeFromLoadMode)
 #11 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #12 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #13 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #14 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #15 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #16 void SpriteAtlas::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #17 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #18 void Sprite::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #19 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #20 void RemapPPtrTransfer::Transfer<MonoPPtr>(MonoPPtr&, char const*, TransferMetaFlags)
 #21 void Transfer_UnityEngineObject<RemapPPtrTransfer, false>(SerializationCommandArguments const&, RuntimeSerializationCommandInfo&)
 #22 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)::'lambda'(bool, bool)::operator()(bool, bool) const
 #23 void TransferScriptingObject<RemapPPtrTransfer>(RemapPPtrTransfer&, ScriptingObjectPtr, ScriptingClassPtr, SerializationCache::Data*&)
 #24 void SerializableManagedRefTransfer::TransferScriptingObjectWithSerializedRefSupport<RemapPPtrTransfer>(Object*, SerializableManagedRef&, RemapPPtrTransfer&)
 #25 ManagedObjectHostTransferRedirect<MonoBehaviour>::Transfer(MonoBehaviour&, RemapPPtrTransfer&)
 #26 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #27 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #28 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #29 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #30 void RemapPPtrTransfer::Transfer<ImmediatePtr<GameObject>>(ImmediatePtr<GameObject>&, char const*, TransferMetaFlags)
 #31 void Unity::Component::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #32 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #33 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #34 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #35 void RemapPPtrTransfer::Transfer<ImmediatePtr<Transform>>(ImmediatePtr<Transform>&, char const*, TransferMetaFlags)
 #36 void Transform::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #37 UI::RectTransform::VirtualRedirectTransfer(RemapPPtrTransfer&)
 #38 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #39 void RemapPPtrTransfer::Transfer<ImmediatePtr<Unity::Component>>(ImmediatePtr<Unity::Component>&, char const*, TransferMetaFlags)
 #40 void GameObject::Transfer<RemapPPtrTransfer>(RemapPPtrTransfer&)
 #41 (anonymous namespace)::DependencyCollector::GenerateInstanceID(int, TransferMetaFlags)
 #42 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #43 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char>> const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #44 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #45 ImportAssetWithAutoReleasePool(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID>> const&, core::vector<PostprocessorInfo, core::allocator<PostprocessorInfo, 0ul>> const&, TransientArtifactProvider const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #46 AssetImportWorker::Import(AssetResolver&, ImportAssetInputs const&, TransientArtifactProvider const&, WorkerImportResponse&, IImportProgress*, bool*)
 #47 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_13::operator()() const
 #48 _dispatch_client_callout
 #49 _dispatch_async_and_wait_invoke
 #50 _dispatch_client_callout
 #51 _dispatch_main_queue_drain
 #52 _dispatch_main_queue_callback_4CF
 #53 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #54 __CFRunLoopRun
 #55 CFRunLoopRunSpecific
 #56 RunCurrentEventLoopInMode
 #57 ReceiveNextEventCommon
 #58 _BlockUntilNextEventMatchingListInModeWithFilter
 #59 _DPSNextEvent
 #60 -[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #61 -[NSApplication run]
 #62 NSApplicationMain
 #63 EditorMain(int, char const**)
 #64 main
 #65 start

 -> (artifact id: 'ce5c28c77ac5415e1abfd4e16eff11cf') in 0.744485333 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 304

========================================================================
Received Import Request.
  Time since last request: 12.096187 seconds.
  path: Assets/Scenes/Singleplayer.unity
  artifactKey: Guid(22318268986f54921849c058ebd0b502) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Scenes/Singleplayer.unity using Guid(22318268986f54921849c058ebd0b502) Importer(815301076,1909f56bfc062723c751e8b465ee728b) (PreviewImporter) -> (artifact id: '4e5b5321434bc6d6df2f56943116716f') in 0.001922958 seconds
Number of updated asset objects reloaded before import = 0Number of asset objects unloaded after import = 0

========================================================================
Received Prepare
Refreshing native plugins compatible for Editor in 33.96 ms, found 12 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 12 Unused Serialized files (Serialized files now loaded: 0)
Unloading 16 unused Assets / (1.7 MB). Loaded Objects now: 8259.
Memory consumption went from 117.8 MB to 116.1 MB.
Total: 59.781625 ms (FindLiveObjects: 1.615458 ms CreateObjectMapping: 0.152125 ms MarkObjects: 57.661833 ms  DeleteObjects: 0.351542 ms)

Prepare: number of updated asset objects reloaded= 0
========================================================================
Received Prepare
Begin MonoManager ReloadAssembly
Thread 0x17f847000 may have been prematurely finalized
Symbol file LoadedFromMemory is not a mono symbol file
- Loaded All Assemblies, in  1.274 seconds
Refreshing native plugins compatible for Editor in 4.53 ms, found 12 plugins.
Native extension for iOS target not found
Native extension for Android target not found
Native extension for OSXStandalone target not found
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
Refreshing native plugins compatible for Editor in 5.16 ms, found 12 plugins.
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
Mono: successfully reloaded assembly
[Package Manager] Failed to launch server process. Reason: Unity was launched with the -noUpm command-line argument
[Package Manager] Unable to send message (not connected to server process).
[Package Manager] Cannot connect to Unity Package Manager local server
- Finished resetting the current domain, in  0.822 seconds
Domain Reload Profiling: 2102ms
	BeginReloadAssembly (329ms)
		ExecutionOrderSort (0ms)
		DisableScriptedObjects (29ms)
		BackupInstance (0ms)
		ReleaseScriptingObjects (0ms)
		CreateAndSetChildDomain (119ms)
	RebuildCommonClasses (45ms)
	RebuildNativeTypeToScriptingClass (15ms)
	initialDomainReloadingComplete (28ms)
	LoadAllAssembliesAndSetupDomain (863ms)
		LoadAssemblies (606ms)
		RebuildTransferFunctionScriptingTraits (0ms)
		AnalyzeDomain (368ms)
			TypeCache.Refresh (204ms)
				TypeCache.ScanAssembly (149ms)
			BuildScriptInfoCaches (149ms)
			ResolveRequiredComponents (8ms)
	FinalizeReload (822ms)
		ReleaseScriptCaches (0ms)
		RebuildScriptCaches (0ms)
		SetupLoadedEditorAssemblies (703ms)
			LogAssemblyErrors (0ms)
			InitializePlatformSupportModulesInManaged (190ms)
			SetLoadedEditorAssemblies (4ms)
			BeforeProcessingInitializeOnLoad (107ms)
			ProcessInitializeOnLoadAttributes (359ms)
			ProcessInitializeOnLoadMethodAttributes (42ms)
			AfterProcessingInitializeOnLoad (1ms)
			EditorAssembliesLoaded (0ms)
		ExecutionOrderSort2 (0ms)
		AwakeInstancesAfterBackupRestoration (3ms)
Refreshing native plugins compatible for Editor in 5.18 ms, found 12 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 107 Unused Serialized files (Serialized files now loaded: 0)
Unloading 7893 unused Assets / (3.0 MB). Loaded Objects now: 8264.
Memory consumption went from 143.3 MB to 140.4 MB.
Total: 7.705250 ms (FindLiveObjects: 0.473000 ms CreateObjectMapping: 0.426708 ms MarkObjects: 5.374209 ms  DeleteObjects: 1.431083 ms)

Prepare: number of updated asset objects reloaded= 0
